package service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.time.LocalDateTime;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.pruebasodexo.models.Noticias;
import com.pruebasodexo.responce.NoticiasResponseRest;

import dao.NoticiasDao;
import jakarta.transaction.Transactional;

public class NoticiasServiceImp implements INoticiasService{
private static final Logger Logger = null;

private static final Logger log = (Logger));
	
	@Autowired
	private NoticiasDao nDao;
	
	@Override
	public ResponseEntity<PreguntasResponseRest> guardarPregunta(PreguntaRecepcion pregunta){
		LOGGER.info("Inicio De Guardar Pregunta");
		PreguntasResponseRest response = new PreguntasResponseRest();
		int validacion = validarDatosNulos(pregunta);		
		Preguntas newpregunta=new Preguntas();
		if (validacion == 0) {
			try {	
				
				Optional<Seccion> seccionPregunta = seccionesDao.findById(pregunta.getId_seccion());
			    if (seccionPregunta.isPresent()) {
			    	Optional<Usuario> usuarioPrgunta= usuarioDao.findById(pregunta.getId_usuario());
					newpregunta.setDescripcion(pregunta.getDescripcion());
					newpregunta.setPregunta(pregunta.getPregunta());
					newpregunta.setSeccion(seccionPregunta.get());
					newpregunta.setUsuario(usuarioPrgunta.get());		      
			        preguntasDao.save(newpregunta);		         
			        response.getPreguntasResponse().setPregunta(newpregunta);
			         
			        SimpleMailMessage email = new SimpleMailMessage();
					email.setTo(newpregunta.getUsuario().getCorreo());
					email.setFrom(emailEmisor);
					email.setSubject("Haz Añadido Perfectamente una pregunta a la seccion" + newpregunta.getSeccion().getDescripcion());
					email.setText("Hola "+newpregunta.getUsuario().getNombre()+":\n"+"Se ha agregado la pregunta correctamente  " + newpregunta.getDescripcion() + " a la Seccion "+ newpregunta.getSeccion().getDescripcion());
					mail.send(email);						
			        List<Preguntas> preguntas = (List<Preguntas>) preguntasDao.findAll();
			        for (Preguntas restpre : preguntas) {
			            if(restpre.getUsuario().getId()!=newpregunta.getUsuario().getId()) {
			            	Long idseccion = restpre.getSeccion().getId();
				             if(idseccion == newpregunta.getSeccion().getId()) {
				                SimpleMailMessage restemail = new SimpleMailMessage();
								restemail.setTo(restpre.getUsuario().getCorreo());
								restemail.setFrom(emailEmisor);
								restemail.setSubject("Alguien a añadido una pregunta en tu seccion");
								restemail.setText("Hola "+restpre.getUsuario().getNombre()+":\n"+"Se ha agregado una pregunta " + newpregunta.getDescripcion() + " En la Seccion donde tambien preguntaste: "+ newpregunta.getSeccion().getDescripcion());
								mail.send(restemail);
			            	}
			            		
			                }
			                
			            }
				} else {			
					LOGGER.error("Pregunta no guardada");
					response.setMetada("Respuesta no OK", "-1", "No se guardó pregunta");
					return new ResponseEntity<>(response, HttpStatus.BAD_REQUEST);
				}				
			}catch (Exception e) {
				LOGGER.error("error en proceso de guardar pregunta");
				response.setMetada("respuesta no OK", "-1", "Error al guardar pregunta");
				return new ResponseEntity<>(response, HttpStatus.INTERNAL_SERVER_ERROR);
			} 		
				response.setMetada("Respuesta ok", "200", "pregunta guardada");
				return new ResponseEntity<>(response, HttpStatus.OK);
		}
	}




}